From 2c2f654b1f82e79b3a6e12273bc7fa1102fc474e Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Thu, 26 Jan 2017 11:21:15 -0500
Subject: [PATCH] Use of uninitialized data in ImageMagick/coders/mat.c

An issue #131 an out of bounds read involving the mat image format has
been fixed.
After the fixing commits the buffer bImgBuff is large enough to deal
with the PoC file that lead to issue #131.

However, after the fix the coder still accesses uninitialized data
which might pose a security issue or at least a bug. The first
undefined access happens within coders/mat.c:1196 in a call to
calcMinMax(). The back part of the buffer bImgBuff is now large enough
but does seemingly not contain any sensible data.

bug-debian: https://bugs.debian.org/870012
bug: https://github.com/ImageMagick/ImageMagick/issues/362
origin: https://github.com/ImageMagick/ImageMagick/commit/51b0ae01709adc1e4a9245e158ef17b85a110960
(cherry picked from commit f86268752ffc70e40b6e1afdebfc96dcc29452db)
---
 coders/mat.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/coders/mat.c b/coders/mat.c
index cf09bec39..eb9d33d73 100644
--- a/coders/mat.c
+++ b/coders/mat.c
@@ -1131,6 +1131,7 @@ RestoreMSCWarning
     BImgBuff = (unsigned char *) AcquireQuantumMemory((size_t) (ldblk),sizeof(double));    /* Ldblk was set in the check phase */
     if (BImgBuff == NULL)
       ThrowReaderException(ResourceLimitError,"MemoryAllocationFailed");
+    (void) ResetMagickMemory(BImgBuff,0,ldblk*sizeof(double));
 
     MinVal = 0;
     MaxVal = 0;
