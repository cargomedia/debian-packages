From b258532d5620a7246ba82c1fc4ddac6444732e1b Mon Sep 17 00:00:00 2001
From: Dirk Lemstra <dirk@git.imagemagick.org>
Date: Tue, 2 May 2017 08:42:38 +0200
Subject: [PATCH] CVE-2017-9407: the ReadPALMImage function in palm.c allows
 attackers to cause a denial of service (memory leak) via a crafted file.

Fixed memory leak reported in #459.

origin: https://github.com/ImageMagick/ImageMagick/commit/7851278ed92bcdef72132ceadee9256c9d98acf1
bug-debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=864089
bug: https://github.com/ImageMagick/ImageMagick/issues/459

(cherry picked from commit 7851278ed92bcdef72132ceadee9256c9d98acf1)
---
 coders/palm.c | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/coders/palm.c b/coders/palm.c
index 49ec4c895..5a81c738a 100644
--- a/coders/palm.c
+++ b/coders/palm.c
@@ -486,7 +486,12 @@ static Image *ReadPALMImage(const ImageInfo *image_info,
       if (bits_per_pixel == 16)
         {
           if (image->columns > (2*bytes_per_row))
-            ThrowReaderException(CorruptImageError,"CorruptImage");
+            {
+              one_row=(unsigned char *) RelinquishMagickMemory(one_row);
+              if (compressionType == PALM_COMPRESSION_SCANLINE)
+                lastrow=(unsigned char *) RelinquishMagickMemory(lastrow);
+              ThrowReaderException(CorruptImageError,"CorruptImage");
+            }
           for (x=0; x < (ssize_t) image->columns; x++)
           {
             color16=(*ptr++ << 8);
@@ -504,7 +509,12 @@ static Image *ReadPALMImage(const ImageInfo *image_info,
           for (x=0; x < (ssize_t) image->columns; x++)
           {
             if ((size_t) (ptr-one_row) >= bytes_per_row)
-              ThrowReaderException(CorruptImageError,"CorruptImage");
+              {
+                one_row=(unsigned char *) RelinquishMagickMemory(one_row);
+                if (compressionType == PALM_COMPRESSION_SCANLINE)
+                  lastrow=(unsigned char *) RelinquishMagickMemory(lastrow);
+                ThrowReaderException(CorruptImageError,"CorruptImage");
+              }
             index=(IndexPacket) (mask-(((*ptr) & (mask << bit)) >> bit));
             SetPixelIndex(indexes+x,index);
             SetPixelRGBO(q,image->colormap+(ssize_t) index);
