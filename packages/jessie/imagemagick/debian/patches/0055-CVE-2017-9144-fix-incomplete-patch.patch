From 0d0707a60be40e2dfb728d6574831fd94dd485c1 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Wed, 31 May 2017 06:20:59 -0400
Subject: [PATCH] CVE-2017-9144 fix incomplete patch

a crafted RLE image can trigger a crash because of incorrect EOF handling in coders/rle.c

bug: https://github.com/ImageMagick/ImageMagick/issues/502
origin: https://github.com/ImageMagick/ImageMagick/commit/7f1f01b695e869c410ee10e2176f8fd764f09373
bug-debian: https://bugs.debian.org/863126

(cherry picked from commit 7f1f01b695e869c410ee10e2176f8fd764f09373)
---
 coders/rle.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/coders/rle.c b/coders/rle.c
index 5279f451c..0326897e1 100644
--- a/coders/rle.c
+++ b/coders/rle.c
@@ -383,12 +383,12 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         case SkipLinesOp:
         {
           operand=ReadBlobByte(image);
-          if (opcode == EOF)
+          if (operand == EOF)
             ThrowRLEException(CorruptImageError,"UnexpectedEndOfFile");
           if (opcode & 0x40)
             {
               operand=ReadBlobLSBSignedShort(image);
-              if (opcode == EOF)
+              if (operand == EOF)
                 ThrowRLEException(CorruptImageError,"UnexpectedEndOfFile");
             }
           x=0;
@@ -398,7 +398,7 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         case SetColorOp:
         {
           operand=ReadBlobByte(image);
-          if (opcode == EOF)
+          if (operand == EOF)
             ThrowRLEException(CorruptImageError,"UnexpectedEndOfFile");
           plane=(unsigned char) operand;
           if (plane == 255)
@@ -409,12 +409,12 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         case SkipPixelsOp:
         {
           operand=ReadBlobByte(image);
-          if (opcode == EOF)
+          if (operand == EOF)
             ThrowRLEException(CorruptImageError,"UnexpectedEndOfFile");
           if (opcode & 0x40)
             {
               operand=ReadBlobLSBSignedShort(image);
-              if (opcode == EOF)
+              if (operand == EOF)
                 ThrowRLEException(CorruptImageError,"UnexpectedEndOfFile");
             }
           x+=operand;
@@ -423,12 +423,12 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         case ByteDataOp:
         {
           operand=ReadBlobByte(image);
-          if (opcode == EOF)
+          if (operand == EOF)
             ThrowRLEException(CorruptImageError,"UnexpectedEndOfFile");
           if (opcode & 0x40)
             {
               operand=ReadBlobLSBSignedShort(image);
-              if (opcode == EOF)
+              if (operand == EOF)
                 ThrowRLEException(CorruptImageError,"UnexpectedEndOfFile");
             }
           offset=(ssize_t) (((image->rows-y-1)*image->columns*number_planes)+x*
@@ -459,12 +459,12 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         case RunDataOp:
         {
           operand=ReadBlobByte(image);
-          if (opcode == EOF)
+          if (operand == EOF)
             ThrowRLEException(CorruptImageError,"UnexpectedEndOfFile");
           if (opcode & 0x40)
             {
               operand=ReadBlobLSBSignedShort(image);
-              if (opcode == EOF)
+              if (operand == EOF)
                 ThrowRLEException(CorruptImageError,"UnexpectedEndOfFile");
             }
           pixel=(unsigned char) ReadBlobByte(image);
