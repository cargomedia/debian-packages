Description: detect x32, handle as non-x86 and no-ASM for now, but enable PIC
Author: Thorsen Glaser <tg@mirbsd.de>
Last-Update: 2015-07-19

--- a/source/CMakeLists.txt
+++ b/source/CMakeLists.txt
@@ -43,6 +43,10 @@ string(TOLOWER "${CMAKE_SYSTEM_PROCESSOR
 set(X86_ALIASES x86 i386 i686 x86_64 amd64)
 list(FIND X86_ALIASES "${SYSPROC}" X86MATCH)
 if("${SYSPROC}" STREQUAL "" OR X86MATCH GREATER "-1")
+  if(CMAKE_LIBRARY_ARCHITECTURE STREQUAL "x86_64-linux-gnux32")
+    message(STATUS "Detected x32 target system")
+    set(X32 1)
+  else()
     message(STATUS "Detected x86 target processor")
     set(X86 1)
     add_definitions(-DX265_ARCH_X86=1)
@@ -50,6 +54,7 @@ if("${SYSPROC}" STREQUAL "" OR X86MATCH
         set(X64 1)
         add_definitions(-DX86_64=1)
     endif()
+  endif()
 elseif(${SYSPROC} STREQUAL "armv6l")
     message(STATUS "Detected ARM target processor")
     set(ARM 1)
@@ -86,6 +91,8 @@ endif(UNIX)
 
 if(X64 AND NOT WIN32)
     option(ENABLE_PIC "Enable Position Independent Code" ON)
+elseif(X32)
+    option(ENABLE_PIC "Enable Position Independent Code" ON)
 else()
     option(ENABLE_PIC "Enable Position Independent Code" OFF)
 endif(X64 AND NOT WIN32)
